// +build !ignore_autogenerated_openshift

// Code generated by conversion-gen. DO NOT EDIT.

package v1

import (
	unsafe "unsafe"

	v1 "github.com/openshift/api/authorization/v1"
	authorization "github.com/openshift/origin/pkg/authorization/apis/authorization"
	api_core_v1 "k8s.io/api/core/v1"
	rbac_v1 "k8s.io/api/rbac/v1"
	meta_v1 "k8s.io/apimachinery/pkg/apis/meta/v1"
	conversion "k8s.io/apimachinery/pkg/conversion"
	runtime "k8s.io/apimachinery/pkg/runtime"
	core "k8s.io/kubernetes/pkg/apis/core"
	core_v1 "k8s.io/kubernetes/pkg/apis/core/v1"
	rbac "k8s.io/kubernetes/pkg/apis/rbac"
)

func init() {
	localSchemeBuilder.Register(RegisterConversions)
}

// RegisterConversions adds conversion functions to the given scheme.
// Public to allow building arbitrary schemes.
func RegisterConversions(scheme *runtime.Scheme) error {
	return scheme.AddGeneratedConversionFuncs(
		Convert_v1_Action_To_authorization_Action,
		Convert_authorization_Action_To_v1_Action,
		Convert_v1_ClusterRole_To_authorization_ClusterRole,
		Convert_authorization_ClusterRole_To_v1_ClusterRole,
		Convert_v1_ClusterRoleBinding_To_authorization_ClusterRoleBinding,
		Convert_authorization_ClusterRoleBinding_To_v1_ClusterRoleBinding,
		Convert_v1_ClusterRoleBindingList_To_authorization_ClusterRoleBindingList,
		Convert_authorization_ClusterRoleBindingList_To_v1_ClusterRoleBindingList,
		Convert_v1_ClusterRoleList_To_authorization_ClusterRoleList,
		Convert_authorization_ClusterRoleList_To_v1_ClusterRoleList,
		Convert_v1_GroupRestriction_To_authorization_GroupRestriction,
		Convert_authorization_GroupRestriction_To_v1_GroupRestriction,
		Convert_v1_IsPersonalSubjectAccessReview_To_authorization_IsPersonalSubjectAccessReview,
		Convert_authorization_IsPersonalSubjectAccessReview_To_v1_IsPersonalSubjectAccessReview,
		Convert_v1_LocalResourceAccessReview_To_authorization_LocalResourceAccessReview,
		Convert_authorization_LocalResourceAccessReview_To_v1_LocalResourceAccessReview,
		Convert_v1_LocalSubjectAccessReview_To_authorization_LocalSubjectAccessReview,
		Convert_authorization_LocalSubjectAccessReview_To_v1_LocalSubjectAccessReview,
		Convert_v1_PolicyRule_To_authorization_PolicyRule,
		Convert_authorization_PolicyRule_To_v1_PolicyRule,
		Convert_v1_ResourceAccessReview_To_authorization_ResourceAccessReview,
		Convert_authorization_ResourceAccessReview_To_v1_ResourceAccessReview,
		Convert_v1_ResourceAccessReviewResponse_To_authorization_ResourceAccessReviewResponse,
		Convert_authorization_ResourceAccessReviewResponse_To_v1_ResourceAccessReviewResponse,
		Convert_v1_Role_To_authorization_Role,
		Convert_authorization_Role_To_v1_Role,
		Convert_v1_RoleBinding_To_authorization_RoleBinding,
		Convert_authorization_RoleBinding_To_v1_RoleBinding,
		Convert_v1_RoleBindingList_To_authorization_RoleBindingList,
		Convert_authorization_RoleBindingList_To_v1_RoleBindingList,
		Convert_v1_RoleBindingRestriction_To_authorization_RoleBindingRestriction,
		Convert_authorization_RoleBindingRestriction_To_v1_RoleBindingRestriction,
		Convert_v1_RoleBindingRestrictionList_To_authorization_RoleBindingRestrictionList,
		Convert_authorization_RoleBindingRestrictionList_To_v1_RoleBindingRestrictionList,
		Convert_v1_RoleBindingRestrictionSpec_To_authorization_RoleBindingRestrictionSpec,
		Convert_authorization_RoleBindingRestrictionSpec_To_v1_RoleBindingRestrictionSpec,
		Convert_v1_RoleList_To_authorization_RoleList,
		Convert_authorization_RoleList_To_v1_RoleList,
		Convert_v1_SelfSubjectRulesReview_To_authorization_SelfSubjectRulesReview,
		Convert_authorization_SelfSubjectRulesReview_To_v1_SelfSubjectRulesReview,
		Convert_v1_SelfSubjectRulesReviewSpec_To_authorization_SelfSubjectRulesReviewSpec,
		Convert_authorization_SelfSubjectRulesReviewSpec_To_v1_SelfSubjectRulesReviewSpec,
		Convert_v1_ServiceAccountReference_To_authorization_ServiceAccountReference,
		Convert_authorization_ServiceAccountReference_To_v1_ServiceAccountReference,
		Convert_v1_ServiceAccountRestriction_To_authorization_ServiceAccountRestriction,
		Convert_authorization_ServiceAccountRestriction_To_v1_ServiceAccountRestriction,
		Convert_v1_SubjectAccessReview_To_authorization_SubjectAccessReview,
		Convert_authorization_SubjectAccessReview_To_v1_SubjectAccessReview,
		Convert_v1_SubjectAccessReviewResponse_To_authorization_SubjectAccessReviewResponse,
		Convert_authorization_SubjectAccessReviewResponse_To_v1_SubjectAccessReviewResponse,
		Convert_v1_SubjectRulesReview_To_authorization_SubjectRulesReview,
		Convert_authorization_SubjectRulesReview_To_v1_SubjectRulesReview,
		Convert_v1_SubjectRulesReviewSpec_To_authorization_SubjectRulesReviewSpec,
		Convert_authorization_SubjectRulesReviewSpec_To_v1_SubjectRulesReviewSpec,
		Convert_v1_SubjectRulesReviewStatus_To_authorization_SubjectRulesReviewStatus,
		Convert_authorization_SubjectRulesReviewStatus_To_v1_SubjectRulesReviewStatus,
		Convert_v1_UserRestriction_To_authorization_UserRestriction,
		Convert_authorization_UserRestriction_To_v1_UserRestriction,
	)
}

func autoConvert_v1_Action_To_authorization_Action(in *v1.Action, out *authorization.Action, s conversion.Scope) error {
	out.Namespace = in.Namespace
	out.Verb = in.Verb
	out.Group = in.Group
	out.Version = in.Version
	out.Resource = in.Resource
	out.ResourceName = in.ResourceName
	out.Path = in.Path
	out.IsNonResourceURL = in.IsNonResourceURL
	if err := runtime.Convert_runtime_RawExtension_To_runtime_Object(&in.Content, &out.Content, s); err != nil {
		return err
	}
	return nil
}

// Convert_v1_Action_To_authorization_Action is an autogenerated conversion function.
func Convert_v1_Action_To_authorization_Action(in *v1.Action, out *authorization.Action, s conversion.Scope) error {
	return autoConvert_v1_Action_To_authorization_Action(in, out, s)
}

func autoConvert_authorization_Action_To_v1_Action(in *authorization.Action, out *v1.Action, s conversion.Scope) error {
	out.Namespace = in.Namespace
	out.Verb = in.Verb
	out.Group = in.Group
	out.Version = in.Version
	out.Resource = in.Resource
	out.ResourceName = in.ResourceName
	out.Path = in.Path
	out.IsNonResourceURL = in.IsNonResourceURL
	if err := runtime.Convert_runtime_Object_To_runtime_RawExtension(&in.Content, &out.Content, s); err != nil {
		return err
	}
	return nil
}

// Convert_authorization_Action_To_v1_Action is an autogenerated conversion function.
func Convert_authorization_Action_To_v1_Action(in *authorization.Action, out *v1.Action, s conversion.Scope) error {
	return autoConvert_authorization_Action_To_v1_Action(in, out, s)
}

func autoConvert_v1_ClusterRole_To_authorization_ClusterRole(in *v1.ClusterRole, out *authorization.ClusterRole, s conversion.Scope) error {
	out.ObjectMeta = in.ObjectMeta
	if in.Rules != nil {
		in, out := &in.Rules, &out.Rules
		*out = make([]authorization.PolicyRule, len(*in))
		for i := range *in {
			if err := Convert_v1_PolicyRule_To_authorization_PolicyRule(&(*in)[i], &(*out)[i], s); err != nil {
				return err
			}
		}
	} else {
		out.Rules = nil
	}
	out.AggregationRule = (*rbac.AggregationRule)(unsafe.Pointer(in.AggregationRule))
	return nil
}

// Convert_v1_ClusterRole_To_authorization_ClusterRole is an autogenerated conversion function.
func Convert_v1_ClusterRole_To_authorization_ClusterRole(in *v1.ClusterRole, out *authorization.ClusterRole, s conversion.Scope) error {
	return autoConvert_v1_ClusterRole_To_authorization_ClusterRole(in, out, s)
}

func autoConvert_authorization_ClusterRole_To_v1_ClusterRole(in *authorization.ClusterRole, out *v1.ClusterRole, s conversion.Scope) error {
	out.ObjectMeta = in.ObjectMeta
	if in.Rules != nil {
		in, out := &in.Rules, &out.Rules
		*out = make([]v1.PolicyRule, len(*in))
		for i := range *in {
			if err := Convert_authorization_PolicyRule_To_v1_PolicyRule(&(*in)[i], &(*out)[i], s); err != nil {
				return err
			}
		}
	} else {
		out.Rules = nil
	}
	out.AggregationRule = (*rbac_v1.AggregationRule)(unsafe.Pointer(in.AggregationRule))
	return nil
}

// Convert_authorization_ClusterRole_To_v1_ClusterRole is an autogenerated conversion function.
func Convert_authorization_ClusterRole_To_v1_ClusterRole(in *authorization.ClusterRole, out *v1.ClusterRole, s conversion.Scope) error {
	return autoConvert_authorization_ClusterRole_To_v1_ClusterRole(in, out, s)
}

func autoConvert_v1_ClusterRoleBinding_To_authorization_ClusterRoleBinding(in *v1.ClusterRoleBinding, out *authorization.ClusterRoleBinding, s conversion.Scope) error {
	out.ObjectMeta = in.ObjectMeta
	// INFO: in.UserNames opted out of conversion generation
	// INFO: in.GroupNames opted out of conversion generation
	if in.Subjects != nil {
		in, out := &in.Subjects, &out.Subjects
		*out = make([]core.ObjectReference, len(*in))
		for i := range *in {
			if err := core_v1.Convert_v1_ObjectReference_To_core_ObjectReference(&(*in)[i], &(*out)[i], s); err != nil {
				return err
			}
		}
	} else {
		out.Subjects = nil
	}
	if err := core_v1.Convert_v1_ObjectReference_To_core_ObjectReference(&in.RoleRef, &out.RoleRef, s); err != nil {
		return err
	}
	return nil
}

func autoConvert_authorization_ClusterRoleBinding_To_v1_ClusterRoleBinding(in *authorization.ClusterRoleBinding, out *v1.ClusterRoleBinding, s conversion.Scope) error {
	out.ObjectMeta = in.ObjectMeta
	if in.Subjects != nil {
		in, out := &in.Subjects, &out.Subjects
		*out = make([]api_core_v1.ObjectReference, len(*in))
		for i := range *in {
			if err := core_v1.Convert_core_ObjectReference_To_v1_ObjectReference(&(*in)[i], &(*out)[i], s); err != nil {
				return err
			}
		}
	} else {
		out.Subjects = nil
	}
	if err := core_v1.Convert_core_ObjectReference_To_v1_ObjectReference(&in.RoleRef, &out.RoleRef, s); err != nil {
		return err
	}
	return nil
}

func autoConvert_v1_ClusterRoleBindingList_To_authorization_ClusterRoleBindingList(in *v1.ClusterRoleBindingList, out *authorization.ClusterRoleBindingList, s conversion.Scope) error {
	out.ListMeta = in.ListMeta
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]authorization.ClusterRoleBinding, len(*in))
		for i := range *in {
			if err := Convert_v1_ClusterRoleBinding_To_authorization_ClusterRoleBinding(&(*in)[i], &(*out)[i], s); err != nil {
				return err
			}
		}
	} else {
		out.Items = nil
	}
	return nil
}

// Convert_v1_ClusterRoleBindingList_To_authorization_ClusterRoleBindingList is an autogenerated conversion function.
func Convert_v1_ClusterRoleBindingList_To_authorization_ClusterRoleBindingList(in *v1.ClusterRoleBindingList, out *authorization.ClusterRoleBindingList, s conversion.Scope) error {
	return autoConvert_v1_ClusterRoleBindingList_To_authorization_ClusterRoleBindingList(in, out, s)
}

func autoConvert_authorization_ClusterRoleBindingList_To_v1_ClusterRoleBindingList(in *authorization.ClusterRoleBindingList, out *v1.ClusterRoleBindingList, s conversion.Scope) error {
	out.ListMeta = in.ListMeta
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]v1.ClusterRoleBinding, len(*in))
		for i := range *in {
			if err := Convert_authorization_ClusterRoleBinding_To_v1_ClusterRoleBinding(&(*in)[i], &(*out)[i], s); err != nil {
				return err
			}
		}
	} else {
		out.Items = nil
	}
	return nil
}

// Convert_authorization_ClusterRoleBindingList_To_v1_ClusterRoleBindingList is an autogenerated conversion function.
func Convert_authorization_ClusterRoleBindingList_To_v1_ClusterRoleBindingList(in *authorization.ClusterRoleBindingList, out *v1.ClusterRoleBindingList, s conversion.Scope) error {
	return autoConvert_authorization_ClusterRoleBindingList_To_v1_ClusterRoleBindingList(in, out, s)
}

func autoConvert_v1_ClusterRoleList_To_authorization_ClusterRoleList(in *v1.ClusterRoleList, out *authorization.ClusterRoleList, s conversion.Scope) error {
	out.ListMeta = in.ListMeta
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]authorization.ClusterRole, len(*in))
		for i := range *in {
			if err := Convert_v1_ClusterRole_To_authorization_ClusterRole(&(*in)[i], &(*out)[i], s); err != nil {
				return err
			}
		}
	} else {
		out.Items = nil
	}
	return nil
}

// Convert_v1_ClusterRoleList_To_authorization_ClusterRoleList is an autogenerated conversion function.
func Convert_v1_ClusterRoleList_To_authorization_ClusterRoleList(in *v1.ClusterRoleList, out *authorization.ClusterRoleList, s conversion.Scope) error {
	return autoConvert_v1_ClusterRoleList_To_authorization_ClusterRoleList(in, out, s)
}

func autoConvert_authorization_ClusterRoleList_To_v1_ClusterRoleList(in *authorization.ClusterRoleList, out *v1.ClusterRoleList, s conversion.Scope) error {
	out.ListMeta = in.ListMeta
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]v1.ClusterRole, len(*in))
		for i := range *in {
			if err := Convert_authorization_ClusterRole_To_v1_ClusterRole(&(*in)[i], &(*out)[i], s); err != nil {
				return err
			}
		}
	} else {
		out.Items = nil
	}
	return nil
}

// Convert_authorization_ClusterRoleList_To_v1_ClusterRoleList is an autogenerated conversion function.
func Convert_authorization_ClusterRoleList_To_v1_ClusterRoleList(in *authorization.ClusterRoleList, out *v1.ClusterRoleList, s conversion.Scope) error {
	return autoConvert_authorization_ClusterRoleList_To_v1_ClusterRoleList(in, out, s)
}

func autoConvert_v1_GroupRestriction_To_authorization_GroupRestriction(in *v1.GroupRestriction, out *authorization.GroupRestriction, s conversion.Scope) error {
	out.Groups = *(*[]string)(unsafe.Pointer(&in.Groups))
	out.Selectors = *(*[]meta_v1.LabelSelector)(unsafe.Pointer(&in.Selectors))
	return nil
}

// Convert_v1_GroupRestriction_To_authorization_GroupRestriction is an autogenerated conversion function.
func Convert_v1_GroupRestriction_To_authorization_GroupRestriction(in *v1.GroupRestriction, out *authorization.GroupRestriction, s conversion.Scope) error {
	return autoConvert_v1_GroupRestriction_To_authorization_GroupRestriction(in, out, s)
}

func autoConvert_authorization_GroupRestriction_To_v1_GroupRestriction(in *authorization.GroupRestriction, out *v1.GroupRestriction, s conversion.Scope) error {
	out.Groups = *(*[]string)(unsafe.Pointer(&in.Groups))
	out.Selectors = *(*[]meta_v1.LabelSelector)(unsafe.Pointer(&in.Selectors))
	return nil
}

// Convert_authorization_GroupRestriction_To_v1_GroupRestriction is an autogenerated conversion function.
func Convert_authorization_GroupRestriction_To_v1_GroupRestriction(in *authorization.GroupRestriction, out *v1.GroupRestriction, s conversion.Scope) error {
	return autoConvert_authorization_GroupRestriction_To_v1_GroupRestriction(in, out, s)
}

func autoConvert_v1_IsPersonalSubjectAccessReview_To_authorization_IsPersonalSubjectAccessReview(in *v1.IsPersonalSubjectAccessReview, out *authorization.IsPersonalSubjectAccessReview, s conversion.Scope) error {
	return nil
}

// Convert_v1_IsPersonalSubjectAccessReview_To_authorization_IsPersonalSubjectAccessReview is an autogenerated conversion function.
func Convert_v1_IsPersonalSubjectAccessReview_To_authorization_IsPersonalSubjectAccessReview(in *v1.IsPersonalSubjectAccessReview, out *authorization.IsPersonalSubjectAccessReview, s conversion.Scope) error {
	return autoConvert_v1_IsPersonalSubjectAccessReview_To_authorization_IsPersonalSubjectAccessReview(in, out, s)
}

func autoConvert_authorization_IsPersonalSubjectAccessReview_To_v1_IsPersonalSubjectAccessReview(in *authorization.IsPersonalSubjectAccessReview, out *v1.IsPersonalSubjectAccessReview, s conversion.Scope) error {
	return nil
}

// Convert_authorization_IsPersonalSubjectAccessReview_To_v1_IsPersonalSubjectAccessReview is an autogenerated conversion function.
func Convert_authorization_IsPersonalSubjectAccessReview_To_v1_IsPersonalSubjectAccessReview(in *authorization.IsPersonalSubjectAccessReview, out *v1.IsPersonalSubjectAccessReview, s conversion.Scope) error {
	return autoConvert_authorization_IsPersonalSubjectAccessReview_To_v1_IsPersonalSubjectAccessReview(in, out, s)
}

func autoConvert_v1_LocalResourceAccessReview_To_authorization_LocalResourceAccessReview(in *v1.LocalResourceAccessReview, out *authorization.LocalResourceAccessReview, s conversion.Scope) error {
	if err := Convert_v1_Action_To_authorization_Action(&in.Action, &out.Action, s); err != nil {
		return err
	}
	return nil
}

// Convert_v1_LocalResourceAccessReview_To_authorization_LocalResourceAccessReview is an autogenerated conversion function.
func Convert_v1_LocalResourceAccessReview_To_authorization_LocalResourceAccessReview(in *v1.LocalResourceAccessReview, out *authorization.LocalResourceAccessReview, s conversion.Scope) error {
	return autoConvert_v1_LocalResourceAccessReview_To_authorization_LocalResourceAccessReview(in, out, s)
}

func autoConvert_authorization_LocalResourceAccessReview_To_v1_LocalResourceAccessReview(in *authorization.LocalResourceAccessReview, out *v1.LocalResourceAccessReview, s conversion.Scope) error {
	if err := Convert_authorization_Action_To_v1_Action(&in.Action, &out.Action, s); err != nil {
		return err
	}
	return nil
}

// Convert_authorization_LocalResourceAccessReview_To_v1_LocalResourceAccessReview is an autogenerated conversion function.
func Convert_authorization_LocalResourceAccessReview_To_v1_LocalResourceAccessReview(in *authorization.LocalResourceAccessReview, out *v1.LocalResourceAccessReview, s conversion.Scope) error {
	return autoConvert_authorization_LocalResourceAccessReview_To_v1_LocalResourceAccessReview(in, out, s)
}

func autoConvert_v1_LocalSubjectAccessReview_To_authorization_LocalSubjectAccessReview(in *v1.LocalSubjectAccessReview, out *authorization.LocalSubjectAccessReview, s conversion.Scope) error {
	if err := Convert_v1_Action_To_authorization_Action(&in.Action, &out.Action, s); err != nil {
		return err
	}
	out.User = in.User
	// INFO: in.GroupsSlice opted out of conversion generation
	// INFO: in.Scopes opted out of conversion generation
	return nil
}

func autoConvert_authorization_LocalSubjectAccessReview_To_v1_LocalSubjectAccessReview(in *authorization.LocalSubjectAccessReview, out *v1.LocalSubjectAccessReview, s conversion.Scope) error {
	if err := Convert_authorization_Action_To_v1_Action(&in.Action, &out.Action, s); err != nil {
		return err
	}
	out.User = in.User
	// INFO: in.Groups opted out of conversion generation
	// INFO: in.Scopes opted out of conversion generation
	return nil
}

func autoConvert_v1_PolicyRule_To_authorization_PolicyRule(in *v1.PolicyRule, out *authorization.PolicyRule, s conversion.Scope) error {
	// WARNING: in.Verbs requires manual conversion: inconvertible types ([]string vs k8s.io/apimachinery/pkg/util/sets.String)
	if err := runtime.Convert_runtime_RawExtension_To_runtime_Object(&in.AttributeRestrictions, &out.AttributeRestrictions, s); err != nil {
		return err
	}
	out.APIGroups = *(*[]string)(unsafe.Pointer(&in.APIGroups))
	// WARNING: in.Resources requires manual conversion: inconvertible types ([]string vs k8s.io/apimachinery/pkg/util/sets.String)
	// WARNING: in.ResourceNames requires manual conversion: inconvertible types ([]string vs k8s.io/apimachinery/pkg/util/sets.String)
	// WARNING: in.NonResourceURLsSlice requires manual conversion: does not exist in peer-type
	return nil
}

func autoConvert_authorization_PolicyRule_To_v1_PolicyRule(in *authorization.PolicyRule, out *v1.PolicyRule, s conversion.Scope) error {
	// WARNING: in.Verbs requires manual conversion: inconvertible types (k8s.io/apimachinery/pkg/util/sets.String vs []string)
	if err := runtime.Convert_runtime_Object_To_runtime_RawExtension(&in.AttributeRestrictions, &out.AttributeRestrictions, s); err != nil {
		return err
	}
	out.APIGroups = *(*[]string)(unsafe.Pointer(&in.APIGroups))
	// WARNING: in.Resources requires manual conversion: inconvertible types (k8s.io/apimachinery/pkg/util/sets.String vs []string)
	// WARNING: in.ResourceNames requires manual conversion: inconvertible types (k8s.io/apimachinery/pkg/util/sets.String vs []string)
	// WARNING: in.NonResourceURLs requires manual conversion: does not exist in peer-type
	return nil
}

func autoConvert_v1_ResourceAccessReview_To_authorization_ResourceAccessReview(in *v1.ResourceAccessReview, out *authorization.ResourceAccessReview, s conversion.Scope) error {
	if err := Convert_v1_Action_To_authorization_Action(&in.Action, &out.Action, s); err != nil {
		return err
	}
	return nil
}

// Convert_v1_ResourceAccessReview_To_authorization_ResourceAccessReview is an autogenerated conversion function.
func Convert_v1_ResourceAccessReview_To_authorization_ResourceAccessReview(in *v1.ResourceAccessReview, out *authorization.ResourceAccessReview, s conversion.Scope) error {
	return autoConvert_v1_ResourceAccessReview_To_authorization_ResourceAccessReview(in, out, s)
}

func autoConvert_authorization_ResourceAccessReview_To_v1_ResourceAccessReview(in *authorization.ResourceAccessReview, out *v1.ResourceAccessReview, s conversion.Scope) error {
	if err := Convert_authorization_Action_To_v1_Action(&in.Action, &out.Action, s); err != nil {
		return err
	}
	return nil
}

// Convert_authorization_ResourceAccessReview_To_v1_ResourceAccessReview is an autogenerated conversion function.
func Convert_authorization_ResourceAccessReview_To_v1_ResourceAccessReview(in *authorization.ResourceAccessReview, out *v1.ResourceAccessReview, s conversion.Scope) error {
	return autoConvert_authorization_ResourceAccessReview_To_v1_ResourceAccessReview(in, out, s)
}

func autoConvert_v1_ResourceAccessReviewResponse_To_authorization_ResourceAccessReviewResponse(in *v1.ResourceAccessReviewResponse, out *authorization.ResourceAccessReviewResponse, s conversion.Scope) error {
	out.Namespace = in.Namespace
	// INFO: in.UsersSlice opted out of conversion generation
	// INFO: in.GroupsSlice opted out of conversion generation
	out.EvaluationError = in.EvaluationError
	return nil
}

func autoConvert_authorization_ResourceAccessReviewResponse_To_v1_ResourceAccessReviewResponse(in *authorization.ResourceAccessReviewResponse, out *v1.ResourceAccessReviewResponse, s conversion.Scope) error {
	out.Namespace = in.Namespace
	// INFO: in.Users opted out of conversion generation
	// INFO: in.Groups opted out of conversion generation
	out.EvaluationError = in.EvaluationError
	return nil
}

func autoConvert_v1_Role_To_authorization_Role(in *v1.Role, out *authorization.Role, s conversion.Scope) error {
	out.ObjectMeta = in.ObjectMeta
	if in.Rules != nil {
		in, out := &in.Rules, &out.Rules
		*out = make([]authorization.PolicyRule, len(*in))
		for i := range *in {
			if err := Convert_v1_PolicyRule_To_authorization_PolicyRule(&(*in)[i], &(*out)[i], s); err != nil {
				return err
			}
		}
	} else {
		out.Rules = nil
	}
	return nil
}

// Convert_v1_Role_To_authorization_Role is an autogenerated conversion function.
func Convert_v1_Role_To_authorization_Role(in *v1.Role, out *authorization.Role, s conversion.Scope) error {
	return autoConvert_v1_Role_To_authorization_Role(in, out, s)
}

func autoConvert_authorization_Role_To_v1_Role(in *authorization.Role, out *v1.Role, s conversion.Scope) error {
	out.ObjectMeta = in.ObjectMeta
	if in.Rules != nil {
		in, out := &in.Rules, &out.Rules
		*out = make([]v1.PolicyRule, len(*in))
		for i := range *in {
			if err := Convert_authorization_PolicyRule_To_v1_PolicyRule(&(*in)[i], &(*out)[i], s); err != nil {
				return err
			}
		}
	} else {
		out.Rules = nil
	}
	return nil
}

// Convert_authorization_Role_To_v1_Role is an autogenerated conversion function.
func Convert_authorization_Role_To_v1_Role(in *authorization.Role, out *v1.Role, s conversion.Scope) error {
	return autoConvert_authorization_Role_To_v1_Role(in, out, s)
}

func autoConvert_v1_RoleBinding_To_authorization_RoleBinding(in *v1.RoleBinding, out *authorization.RoleBinding, s conversion.Scope) error {
	out.ObjectMeta = in.ObjectMeta
	// INFO: in.UserNames opted out of conversion generation
	// INFO: in.GroupNames opted out of conversion generation
	if in.Subjects != nil {
		in, out := &in.Subjects, &out.Subjects
		*out = make([]core.ObjectReference, len(*in))
		for i := range *in {
			if err := core_v1.Convert_v1_ObjectReference_To_core_ObjectReference(&(*in)[i], &(*out)[i], s); err != nil {
				return err
			}
		}
	} else {
		out.Subjects = nil
	}
	if err := core_v1.Convert_v1_ObjectReference_To_core_ObjectReference(&in.RoleRef, &out.RoleRef, s); err != nil {
		return err
	}
	return nil
}

func autoConvert_authorization_RoleBinding_To_v1_RoleBinding(in *authorization.RoleBinding, out *v1.RoleBinding, s conversion.Scope) error {
	out.ObjectMeta = in.ObjectMeta
	if in.Subjects != nil {
		in, out := &in.Subjects, &out.Subjects
		*out = make([]api_core_v1.ObjectReference, len(*in))
		for i := range *in {
			if err := core_v1.Convert_core_ObjectReference_To_v1_ObjectReference(&(*in)[i], &(*out)[i], s); err != nil {
				return err
			}
		}
	} else {
		out.Subjects = nil
	}
	if err := core_v1.Convert_core_ObjectReference_To_v1_ObjectReference(&in.RoleRef, &out.RoleRef, s); err != nil {
		return err
	}
	return nil
}

func autoConvert_v1_RoleBindingList_To_authorization_RoleBindingList(in *v1.RoleBindingList, out *authorization.RoleBindingList, s conversion.Scope) error {
	out.ListMeta = in.ListMeta
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]authorization.RoleBinding, len(*in))
		for i := range *in {
			if err := Convert_v1_RoleBinding_To_authorization_RoleBinding(&(*in)[i], &(*out)[i], s); err != nil {
				return err
			}
		}
	} else {
		out.Items = nil
	}
	return nil
}

// Convert_v1_RoleBindingList_To_authorization_RoleBindingList is an autogenerated conversion function.
func Convert_v1_RoleBindingList_To_authorization_RoleBindingList(in *v1.RoleBindingList, out *authorization.RoleBindingList, s conversion.Scope) error {
	return autoConvert_v1_RoleBindingList_To_authorization_RoleBindingList(in, out, s)
}

func autoConvert_authorization_RoleBindingList_To_v1_RoleBindingList(in *authorization.RoleBindingList, out *v1.RoleBindingList, s conversion.Scope) error {
	out.ListMeta = in.ListMeta
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]v1.RoleBinding, len(*in))
		for i := range *in {
			if err := Convert_authorization_RoleBinding_To_v1_RoleBinding(&(*in)[i], &(*out)[i], s); err != nil {
				return err
			}
		}
	} else {
		out.Items = nil
	}
	return nil
}

// Convert_authorization_RoleBindingList_To_v1_RoleBindingList is an autogenerated conversion function.
func Convert_authorization_RoleBindingList_To_v1_RoleBindingList(in *authorization.RoleBindingList, out *v1.RoleBindingList, s conversion.Scope) error {
	return autoConvert_authorization_RoleBindingList_To_v1_RoleBindingList(in, out, s)
}

func autoConvert_v1_RoleBindingRestriction_To_authorization_RoleBindingRestriction(in *v1.RoleBindingRestriction, out *authorization.RoleBindingRestriction, s conversion.Scope) error {
	out.ObjectMeta = in.ObjectMeta
	if err := Convert_v1_RoleBindingRestrictionSpec_To_authorization_RoleBindingRestrictionSpec(&in.Spec, &out.Spec, s); err != nil {
		return err
	}
	return nil
}

// Convert_v1_RoleBindingRestriction_To_authorization_RoleBindingRestriction is an autogenerated conversion function.
func Convert_v1_RoleBindingRestriction_To_authorization_RoleBindingRestriction(in *v1.RoleBindingRestriction, out *authorization.RoleBindingRestriction, s conversion.Scope) error {
	return autoConvert_v1_RoleBindingRestriction_To_authorization_RoleBindingRestriction(in, out, s)
}

func autoConvert_authorization_RoleBindingRestriction_To_v1_RoleBindingRestriction(in *authorization.RoleBindingRestriction, out *v1.RoleBindingRestriction, s conversion.Scope) error {
	out.ObjectMeta = in.ObjectMeta
	if err := Convert_authorization_RoleBindingRestrictionSpec_To_v1_RoleBindingRestrictionSpec(&in.Spec, &out.Spec, s); err != nil {
		return err
	}
	return nil
}

// Convert_authorization_RoleBindingRestriction_To_v1_RoleBindingRestriction is an autogenerated conversion function.
func Convert_authorization_RoleBindingRestriction_To_v1_RoleBindingRestriction(in *authorization.RoleBindingRestriction, out *v1.RoleBindingRestriction, s conversion.Scope) error {
	return autoConvert_authorization_RoleBindingRestriction_To_v1_RoleBindingRestriction(in, out, s)
}

func autoConvert_v1_RoleBindingRestrictionList_To_authorization_RoleBindingRestrictionList(in *v1.RoleBindingRestrictionList, out *authorization.RoleBindingRestrictionList, s conversion.Scope) error {
	out.ListMeta = in.ListMeta
	out.Items = *(*[]authorization.RoleBindingRestriction)(unsafe.Pointer(&in.Items))
	return nil
}

// Convert_v1_RoleBindingRestrictionList_To_authorization_RoleBindingRestrictionList is an autogenerated conversion function.
func Convert_v1_RoleBindingRestrictionList_To_authorization_RoleBindingRestrictionList(in *v1.RoleBindingRestrictionList, out *authorization.RoleBindingRestrictionList, s conversion.Scope) error {
	return autoConvert_v1_RoleBindingRestrictionList_To_authorization_RoleBindingRestrictionList(in, out, s)
}

func autoConvert_authorization_RoleBindingRestrictionList_To_v1_RoleBindingRestrictionList(in *authorization.RoleBindingRestrictionList, out *v1.RoleBindingRestrictionList, s conversion.Scope) error {
	out.ListMeta = in.ListMeta
	out.Items = *(*[]v1.RoleBindingRestriction)(unsafe.Pointer(&in.Items))
	return nil
}

// Convert_authorization_RoleBindingRestrictionList_To_v1_RoleBindingRestrictionList is an autogenerated conversion function.
func Convert_authorization_RoleBindingRestrictionList_To_v1_RoleBindingRestrictionList(in *authorization.RoleBindingRestrictionList, out *v1.RoleBindingRestrictionList, s conversion.Scope) error {
	return autoConvert_authorization_RoleBindingRestrictionList_To_v1_RoleBindingRestrictionList(in, out, s)
}

func autoConvert_v1_RoleBindingRestrictionSpec_To_authorization_RoleBindingRestrictionSpec(in *v1.RoleBindingRestrictionSpec, out *authorization.RoleBindingRestrictionSpec, s conversion.Scope) error {
	out.UserRestriction = (*authorization.UserRestriction)(unsafe.Pointer(in.UserRestriction))
	out.GroupRestriction = (*authorization.GroupRestriction)(unsafe.Pointer(in.GroupRestriction))
	out.ServiceAccountRestriction = (*authorization.ServiceAccountRestriction)(unsafe.Pointer(in.ServiceAccountRestriction))
	return nil
}

// Convert_v1_RoleBindingRestrictionSpec_To_authorization_RoleBindingRestrictionSpec is an autogenerated conversion function.
func Convert_v1_RoleBindingRestrictionSpec_To_authorization_RoleBindingRestrictionSpec(in *v1.RoleBindingRestrictionSpec, out *authorization.RoleBindingRestrictionSpec, s conversion.Scope) error {
	return autoConvert_v1_RoleBindingRestrictionSpec_To_authorization_RoleBindingRestrictionSpec(in, out, s)
}

func autoConvert_authorization_RoleBindingRestrictionSpec_To_v1_RoleBindingRestrictionSpec(in *authorization.RoleBindingRestrictionSpec, out *v1.RoleBindingRestrictionSpec, s conversion.Scope) error {
	out.UserRestriction = (*v1.UserRestriction)(unsafe.Pointer(in.UserRestriction))
	out.GroupRestriction = (*v1.GroupRestriction)(unsafe.Pointer(in.GroupRestriction))
	out.ServiceAccountRestriction = (*v1.ServiceAccountRestriction)(unsafe.Pointer(in.ServiceAccountRestriction))
	return nil
}

// Convert_authorization_RoleBindingRestrictionSpec_To_v1_RoleBindingRestrictionSpec is an autogenerated conversion function.
func Convert_authorization_RoleBindingRestrictionSpec_To_v1_RoleBindingRestrictionSpec(in *authorization.RoleBindingRestrictionSpec, out *v1.RoleBindingRestrictionSpec, s conversion.Scope) error {
	return autoConvert_authorization_RoleBindingRestrictionSpec_To_v1_RoleBindingRestrictionSpec(in, out, s)
}

func autoConvert_v1_RoleList_To_authorization_RoleList(in *v1.RoleList, out *authorization.RoleList, s conversion.Scope) error {
	out.ListMeta = in.ListMeta
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]authorization.Role, len(*in))
		for i := range *in {
			if err := Convert_v1_Role_To_authorization_Role(&(*in)[i], &(*out)[i], s); err != nil {
				return err
			}
		}
	} else {
		out.Items = nil
	}
	return nil
}

// Convert_v1_RoleList_To_authorization_RoleList is an autogenerated conversion function.
func Convert_v1_RoleList_To_authorization_RoleList(in *v1.RoleList, out *authorization.RoleList, s conversion.Scope) error {
	return autoConvert_v1_RoleList_To_authorization_RoleList(in, out, s)
}

func autoConvert_authorization_RoleList_To_v1_RoleList(in *authorization.RoleList, out *v1.RoleList, s conversion.Scope) error {
	out.ListMeta = in.ListMeta
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]v1.Role, len(*in))
		for i := range *in {
			if err := Convert_authorization_Role_To_v1_Role(&(*in)[i], &(*out)[i], s); err != nil {
				return err
			}
		}
	} else {
		out.Items = nil
	}
	return nil
}

// Convert_authorization_RoleList_To_v1_RoleList is an autogenerated conversion function.
func Convert_authorization_RoleList_To_v1_RoleList(in *authorization.RoleList, out *v1.RoleList, s conversion.Scope) error {
	return autoConvert_authorization_RoleList_To_v1_RoleList(in, out, s)
}

func autoConvert_v1_SelfSubjectRulesReview_To_authorization_SelfSubjectRulesReview(in *v1.SelfSubjectRulesReview, out *authorization.SelfSubjectRulesReview, s conversion.Scope) error {
	if err := Convert_v1_SelfSubjectRulesReviewSpec_To_authorization_SelfSubjectRulesReviewSpec(&in.Spec, &out.Spec, s); err != nil {
		return err
	}
	if err := Convert_v1_SubjectRulesReviewStatus_To_authorization_SubjectRulesReviewStatus(&in.Status, &out.Status, s); err != nil {
		return err
	}
	return nil
}

// Convert_v1_SelfSubjectRulesReview_To_authorization_SelfSubjectRulesReview is an autogenerated conversion function.
func Convert_v1_SelfSubjectRulesReview_To_authorization_SelfSubjectRulesReview(in *v1.SelfSubjectRulesReview, out *authorization.SelfSubjectRulesReview, s conversion.Scope) error {
	return autoConvert_v1_SelfSubjectRulesReview_To_authorization_SelfSubjectRulesReview(in, out, s)
}

func autoConvert_authorization_SelfSubjectRulesReview_To_v1_SelfSubjectRulesReview(in *authorization.SelfSubjectRulesReview, out *v1.SelfSubjectRulesReview, s conversion.Scope) error {
	if err := Convert_authorization_SelfSubjectRulesReviewSpec_To_v1_SelfSubjectRulesReviewSpec(&in.Spec, &out.Spec, s); err != nil {
		return err
	}
	if err := Convert_authorization_SubjectRulesReviewStatus_To_v1_SubjectRulesReviewStatus(&in.Status, &out.Status, s); err != nil {
		return err
	}
	return nil
}

// Convert_authorization_SelfSubjectRulesReview_To_v1_SelfSubjectRulesReview is an autogenerated conversion function.
func Convert_authorization_SelfSubjectRulesReview_To_v1_SelfSubjectRulesReview(in *authorization.SelfSubjectRulesReview, out *v1.SelfSubjectRulesReview, s conversion.Scope) error {
	return autoConvert_authorization_SelfSubjectRulesReview_To_v1_SelfSubjectRulesReview(in, out, s)
}

func autoConvert_v1_SelfSubjectRulesReviewSpec_To_authorization_SelfSubjectRulesReviewSpec(in *v1.SelfSubjectRulesReviewSpec, out *authorization.SelfSubjectRulesReviewSpec, s conversion.Scope) error {
	// INFO: in.Scopes opted out of conversion generation
	return nil
}

func autoConvert_authorization_SelfSubjectRulesReviewSpec_To_v1_SelfSubjectRulesReviewSpec(in *authorization.SelfSubjectRulesReviewSpec, out *v1.SelfSubjectRulesReviewSpec, s conversion.Scope) error {
	// INFO: in.Scopes opted out of conversion generation
	return nil
}

func autoConvert_v1_ServiceAccountReference_To_authorization_ServiceAccountReference(in *v1.ServiceAccountReference, out *authorization.ServiceAccountReference, s conversion.Scope) error {
	out.Name = in.Name
	out.Namespace = in.Namespace
	return nil
}

// Convert_v1_ServiceAccountReference_To_authorization_ServiceAccountReference is an autogenerated conversion function.
func Convert_v1_ServiceAccountReference_To_authorization_ServiceAccountReference(in *v1.ServiceAccountReference, out *authorization.ServiceAccountReference, s conversion.Scope) error {
	return autoConvert_v1_ServiceAccountReference_To_authorization_ServiceAccountReference(in, out, s)
}

func autoConvert_authorization_ServiceAccountReference_To_v1_ServiceAccountReference(in *authorization.ServiceAccountReference, out *v1.ServiceAccountReference, s conversion.Scope) error {
	out.Name = in.Name
	out.Namespace = in.Namespace
	return nil
}

// Convert_authorization_ServiceAccountReference_To_v1_ServiceAccountReference is an autogenerated conversion function.
func Convert_authorization_ServiceAccountReference_To_v1_ServiceAccountReference(in *authorization.ServiceAccountReference, out *v1.ServiceAccountReference, s conversion.Scope) error {
	return autoConvert_authorization_ServiceAccountReference_To_v1_ServiceAccountReference(in, out, s)
}

func autoConvert_v1_ServiceAccountRestriction_To_authorization_ServiceAccountRestriction(in *v1.ServiceAccountRestriction, out *authorization.ServiceAccountRestriction, s conversion.Scope) error {
	out.ServiceAccounts = *(*[]authorization.ServiceAccountReference)(unsafe.Pointer(&in.ServiceAccounts))
	out.Namespaces = *(*[]string)(unsafe.Pointer(&in.Namespaces))
	return nil
}

// Convert_v1_ServiceAccountRestriction_To_authorization_ServiceAccountRestriction is an autogenerated conversion function.
func Convert_v1_ServiceAccountRestriction_To_authorization_ServiceAccountRestriction(in *v1.ServiceAccountRestriction, out *authorization.ServiceAccountRestriction, s conversion.Scope) error {
	return autoConvert_v1_ServiceAccountRestriction_To_authorization_ServiceAccountRestriction(in, out, s)
}

func autoConvert_authorization_ServiceAccountRestriction_To_v1_ServiceAccountRestriction(in *authorization.ServiceAccountRestriction, out *v1.ServiceAccountRestriction, s conversion.Scope) error {
	out.ServiceAccounts = *(*[]v1.ServiceAccountReference)(unsafe.Pointer(&in.ServiceAccounts))
	out.Namespaces = *(*[]string)(unsafe.Pointer(&in.Namespaces))
	return nil
}

// Convert_authorization_ServiceAccountRestriction_To_v1_ServiceAccountRestriction is an autogenerated conversion function.
func Convert_authorization_ServiceAccountRestriction_To_v1_ServiceAccountRestriction(in *authorization.ServiceAccountRestriction, out *v1.ServiceAccountRestriction, s conversion.Scope) error {
	return autoConvert_authorization_ServiceAccountRestriction_To_v1_ServiceAccountRestriction(in, out, s)
}

func autoConvert_v1_SubjectAccessReview_To_authorization_SubjectAccessReview(in *v1.SubjectAccessReview, out *authorization.SubjectAccessReview, s conversion.Scope) error {
	if err := Convert_v1_Action_To_authorization_Action(&in.Action, &out.Action, s); err != nil {
		return err
	}
	out.User = in.User
	// INFO: in.GroupsSlice opted out of conversion generation
	// INFO: in.Scopes opted out of conversion generation
	return nil
}

func autoConvert_authorization_SubjectAccessReview_To_v1_SubjectAccessReview(in *authorization.SubjectAccessReview, out *v1.SubjectAccessReview, s conversion.Scope) error {
	if err := Convert_authorization_Action_To_v1_Action(&in.Action, &out.Action, s); err != nil {
		return err
	}
	out.User = in.User
	// INFO: in.Groups opted out of conversion generation
	// INFO: in.Scopes opted out of conversion generation
	return nil
}

func autoConvert_v1_SubjectAccessReviewResponse_To_authorization_SubjectAccessReviewResponse(in *v1.SubjectAccessReviewResponse, out *authorization.SubjectAccessReviewResponse, s conversion.Scope) error {
	out.Namespace = in.Namespace
	out.Allowed = in.Allowed
	out.Reason = in.Reason
	out.EvaluationError = in.EvaluationError
	return nil
}

// Convert_v1_SubjectAccessReviewResponse_To_authorization_SubjectAccessReviewResponse is an autogenerated conversion function.
func Convert_v1_SubjectAccessReviewResponse_To_authorization_SubjectAccessReviewResponse(in *v1.SubjectAccessReviewResponse, out *authorization.SubjectAccessReviewResponse, s conversion.Scope) error {
	return autoConvert_v1_SubjectAccessReviewResponse_To_authorization_SubjectAccessReviewResponse(in, out, s)
}

func autoConvert_authorization_SubjectAccessReviewResponse_To_v1_SubjectAccessReviewResponse(in *authorization.SubjectAccessReviewResponse, out *v1.SubjectAccessReviewResponse, s conversion.Scope) error {
	out.Namespace = in.Namespace
	out.Allowed = in.Allowed
	out.Reason = in.Reason
	out.EvaluationError = in.EvaluationError
	return nil
}

// Convert_authorization_SubjectAccessReviewResponse_To_v1_SubjectAccessReviewResponse is an autogenerated conversion function.
func Convert_authorization_SubjectAccessReviewResponse_To_v1_SubjectAccessReviewResponse(in *authorization.SubjectAccessReviewResponse, out *v1.SubjectAccessReviewResponse, s conversion.Scope) error {
	return autoConvert_authorization_SubjectAccessReviewResponse_To_v1_SubjectAccessReviewResponse(in, out, s)
}

func autoConvert_v1_SubjectRulesReview_To_authorization_SubjectRulesReview(in *v1.SubjectRulesReview, out *authorization.SubjectRulesReview, s conversion.Scope) error {
	if err := Convert_v1_SubjectRulesReviewSpec_To_authorization_SubjectRulesReviewSpec(&in.Spec, &out.Spec, s); err != nil {
		return err
	}
	if err := Convert_v1_SubjectRulesReviewStatus_To_authorization_SubjectRulesReviewStatus(&in.Status, &out.Status, s); err != nil {
		return err
	}
	return nil
}

// Convert_v1_SubjectRulesReview_To_authorization_SubjectRulesReview is an autogenerated conversion function.
func Convert_v1_SubjectRulesReview_To_authorization_SubjectRulesReview(in *v1.SubjectRulesReview, out *authorization.SubjectRulesReview, s conversion.Scope) error {
	return autoConvert_v1_SubjectRulesReview_To_authorization_SubjectRulesReview(in, out, s)
}

func autoConvert_authorization_SubjectRulesReview_To_v1_SubjectRulesReview(in *authorization.SubjectRulesReview, out *v1.SubjectRulesReview, s conversion.Scope) error {
	if err := Convert_authorization_SubjectRulesReviewSpec_To_v1_SubjectRulesReviewSpec(&in.Spec, &out.Spec, s); err != nil {
		return err
	}
	if err := Convert_authorization_SubjectRulesReviewStatus_To_v1_SubjectRulesReviewStatus(&in.Status, &out.Status, s); err != nil {
		return err
	}
	return nil
}

// Convert_authorization_SubjectRulesReview_To_v1_SubjectRulesReview is an autogenerated conversion function.
func Convert_authorization_SubjectRulesReview_To_v1_SubjectRulesReview(in *authorization.SubjectRulesReview, out *v1.SubjectRulesReview, s conversion.Scope) error {
	return autoConvert_authorization_SubjectRulesReview_To_v1_SubjectRulesReview(in, out, s)
}

func autoConvert_v1_SubjectRulesReviewSpec_To_authorization_SubjectRulesReviewSpec(in *v1.SubjectRulesReviewSpec, out *authorization.SubjectRulesReviewSpec, s conversion.Scope) error {
	out.User = in.User
	out.Groups = *(*[]string)(unsafe.Pointer(&in.Groups))
	out.Scopes = *(*[]string)(unsafe.Pointer(&in.Scopes))
	return nil
}

// Convert_v1_SubjectRulesReviewSpec_To_authorization_SubjectRulesReviewSpec is an autogenerated conversion function.
func Convert_v1_SubjectRulesReviewSpec_To_authorization_SubjectRulesReviewSpec(in *v1.SubjectRulesReviewSpec, out *authorization.SubjectRulesReviewSpec, s conversion.Scope) error {
	return autoConvert_v1_SubjectRulesReviewSpec_To_authorization_SubjectRulesReviewSpec(in, out, s)
}

func autoConvert_authorization_SubjectRulesReviewSpec_To_v1_SubjectRulesReviewSpec(in *authorization.SubjectRulesReviewSpec, out *v1.SubjectRulesReviewSpec, s conversion.Scope) error {
	out.User = in.User
	out.Groups = *(*[]string)(unsafe.Pointer(&in.Groups))
	out.Scopes = *(*v1.OptionalScopes)(unsafe.Pointer(&in.Scopes))
	return nil
}

// Convert_authorization_SubjectRulesReviewSpec_To_v1_SubjectRulesReviewSpec is an autogenerated conversion function.
func Convert_authorization_SubjectRulesReviewSpec_To_v1_SubjectRulesReviewSpec(in *authorization.SubjectRulesReviewSpec, out *v1.SubjectRulesReviewSpec, s conversion.Scope) error {
	return autoConvert_authorization_SubjectRulesReviewSpec_To_v1_SubjectRulesReviewSpec(in, out, s)
}

func autoConvert_v1_SubjectRulesReviewStatus_To_authorization_SubjectRulesReviewStatus(in *v1.SubjectRulesReviewStatus, out *authorization.SubjectRulesReviewStatus, s conversion.Scope) error {
	if in.Rules != nil {
		in, out := &in.Rules, &out.Rules
		*out = make([]authorization.PolicyRule, len(*in))
		for i := range *in {
			if err := Convert_v1_PolicyRule_To_authorization_PolicyRule(&(*in)[i], &(*out)[i], s); err != nil {
				return err
			}
		}
	} else {
		out.Rules = nil
	}
	out.EvaluationError = in.EvaluationError
	return nil
}

// Convert_v1_SubjectRulesReviewStatus_To_authorization_SubjectRulesReviewStatus is an autogenerated conversion function.
func Convert_v1_SubjectRulesReviewStatus_To_authorization_SubjectRulesReviewStatus(in *v1.SubjectRulesReviewStatus, out *authorization.SubjectRulesReviewStatus, s conversion.Scope) error {
	return autoConvert_v1_SubjectRulesReviewStatus_To_authorization_SubjectRulesReviewStatus(in, out, s)
}

func autoConvert_authorization_SubjectRulesReviewStatus_To_v1_SubjectRulesReviewStatus(in *authorization.SubjectRulesReviewStatus, out *v1.SubjectRulesReviewStatus, s conversion.Scope) error {
	if in.Rules != nil {
		in, out := &in.Rules, &out.Rules
		*out = make([]v1.PolicyRule, len(*in))
		for i := range *in {
			if err := Convert_authorization_PolicyRule_To_v1_PolicyRule(&(*in)[i], &(*out)[i], s); err != nil {
				return err
			}
		}
	} else {
		out.Rules = nil
	}
	out.EvaluationError = in.EvaluationError
	return nil
}

// Convert_authorization_SubjectRulesReviewStatus_To_v1_SubjectRulesReviewStatus is an autogenerated conversion function.
func Convert_authorization_SubjectRulesReviewStatus_To_v1_SubjectRulesReviewStatus(in *authorization.SubjectRulesReviewStatus, out *v1.SubjectRulesReviewStatus, s conversion.Scope) error {
	return autoConvert_authorization_SubjectRulesReviewStatus_To_v1_SubjectRulesReviewStatus(in, out, s)
}

func autoConvert_v1_UserRestriction_To_authorization_UserRestriction(in *v1.UserRestriction, out *authorization.UserRestriction, s conversion.Scope) error {
	out.Users = *(*[]string)(unsafe.Pointer(&in.Users))
	out.Groups = *(*[]string)(unsafe.Pointer(&in.Groups))
	out.Selectors = *(*[]meta_v1.LabelSelector)(unsafe.Pointer(&in.Selectors))
	return nil
}

// Convert_v1_UserRestriction_To_authorization_UserRestriction is an autogenerated conversion function.
func Convert_v1_UserRestriction_To_authorization_UserRestriction(in *v1.UserRestriction, out *authorization.UserRestriction, s conversion.Scope) error {
	return autoConvert_v1_UserRestriction_To_authorization_UserRestriction(in, out, s)
}

func autoConvert_authorization_UserRestriction_To_v1_UserRestriction(in *authorization.UserRestriction, out *v1.UserRestriction, s conversion.Scope) error {
	out.Users = *(*[]string)(unsafe.Pointer(&in.Users))
	out.Groups = *(*[]string)(unsafe.Pointer(&in.Groups))
	out.Selectors = *(*[]meta_v1.LabelSelector)(unsafe.Pointer(&in.Selectors))
	return nil
}

// Convert_authorization_UserRestriction_To_v1_UserRestriction is an autogenerated conversion function.
func Convert_authorization_UserRestriction_To_v1_UserRestriction(in *authorization.UserRestriction, out *v1.UserRestriction, s conversion.Scope) error {
	return autoConvert_authorization_UserRestriction_To_v1_UserRestriction(in, out, s)
}
